harnessApiVersion: '1.0'
type: BASIC
concurrencyStrategy: INFRA
envName: AWS Test Environment
failureStrategies:
- executionScope: WORKFLOW
  failureTypes:
  - APPLICATION_ERROR
  repairActionCode: ROLLBACK_WORKFLOW
  retryCount: 0
notificationRules:
- conditions:
  - FAILED
  executionScope: WORKFLOW
  notificationGroupAsExpression: false
  userGroupAsExpression: false
  userGroupNames:
  - Account Administrator
phases:
- type: SSH
  computeProviderName: Amazon Web Services
  daemonSet: false
  infraDefinitionName: ssh infra definition
  name: Phase 1
  phaseSteps:
  - type: INFRASTRUCTURE_NODE
    name: Prepare Infra
    steps:
    - type: SHELL_SCRIPT
      name: Test
      properties:
        commandPath: null
        connectionAttributeName: null
        executeOnDelegate: true
        host: null
        outputVars: pr_number
        publishAsVar: true
        scriptString: |-
          echo "Artifact Details"
          echo " Path: ${artifact.artifactPath}"
          echo " Bucket: ${artifact.bucketName}"
          echo " Full Display Name: ${artifact.buildFullDisplayName}"
          echo " Build No: ${artifact.buildNo}"
          echo " Description: ${artifact.description}"
          echo " Display Name: ${artifact.displayName}"
          echo " FileName: ${artifact.fileName}"
          echo " Key: ${artifact.key}"
          echo " Lable: ${artifact.label}"
          echo " Meta Image: ${artifact.metadata.image}"
          echo " Meta Tag: ${artifact.metadata.tag}"
          echo " Revision: ${artifact.revision}"

          pr_number="${regex.extract("[0-9]*", ${artifact.fileName})}"
          #pr_number="5"
          echo "PR: $pr_number"
        scriptType: BASH
        secretOutputVars: ''
        sshKeyRefName: null
        sweepingOutputName: package
        sweepingOutputScope: WORKFLOW
        templateExpressions: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 60000
    stepsInParallel: false
  - type: DISABLE_SERVICE
    name: Disable Service
    stepsInParallel: false
  - type: DEPLOY_SERVICE
    name: Deploy Service
    steps:
    - type: COMMAND
      name: Deploy Test
      properties:
        commandName: Start
        executeOnDelegate: true
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 1200000
    - type: SHELL_SCRIPT
      name: Shell Script
      properties:
        commandPath: null
        connectionAttributeName: null
        executeOnDelegate: true
        host: null
        outputVars: ''
        publishAsVar: false
        scriptString: "set -e\n\necho \"#####\"\necho $0\necho \"#####\"\n\n#Create a working directory and set variable \ncd /tmp\nmkdir -p /tmp/test\ncd test\n\n#working_directory=$(echo ${workflow.startTs})\n\necho \"#########################################################\"\necho \"Just printing the git commands instead of executing it to test the conditional\"\necho \"#########################################################\"\necho \"\"\n\n\n#Clone GIT repository\necho \"git clone https://github.com/pedrokuhn/${serviceVariable.repository_name}.git\"\necho \"cd ${serviceVariable.repository_name}\"\n\necho \"Cloning repo: ${serviceVariable.repository_name}\"\necho \"Artifact: ${artifact.fileName}\"\n\nif [[ \"${artifact.fileName}\" != *\"master\"* ]]\nthen\n  echo \"#### Entered in the conditional ####\"\n  echo \"Pulling PR ${context.package.pr_number}\"\n  echo \"git pull origin pull/${context.package.pr_number}/merge\"\nfi\n"
        scriptType: BASH
        sshKeyRefName: null
        sweepingOutputName: null
        sweepingOutputScope: null
        templateExpressions: null
        templateUuid: null
        templateVariables: null
        templateVersion: null
        timeoutMillis: 60000
    stepsInParallel: false
  - type: ENABLE_SERVICE
    name: Enable Service
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: Service Test Security Shell
  statefulSet: false
preDeploymentSteps:
- type: ARTIFACT_CHECK
  name: Artifact Check
rollbackPhases:
- type: SSH
  computeProviderName: Amazon Web Services
  daemonSet: false
  infraDefinitionName: ssh infra definition
  name: Rollback Phase 1
  phaseNameForRollback: Phase 1
  phaseSteps:
  - type: DISABLE_SERVICE
    name: Disable Service
    phaseStepNameForRollback: Enable Service
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: STOP_SERVICE
    name: Stop Service
    phaseStepNameForRollback: Deploy Service
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: DEPLOY_SERVICE
    name: Deploy Service
    phaseStepNameForRollback: Deploy Service
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: ENABLE_SERVICE
    name: Enable Service
    phaseStepNameForRollback: Disable Service
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: VERIFY_SERVICE
    name: Verify Service
    phaseStepNameForRollback: Deploy Service
    statusForRollback: SUCCESS
    stepsInParallel: false
  - type: WRAP_UP
    name: Wrap Up
    stepsInParallel: false
  provisionNodes: false
  serviceName: Service Test Security Shell
  statefulSet: false
templatized: false
